# 1) Redirect all HTTP â†’ HTTPS
server {
    listen 80;
    server_name easyrent.zmachine.pro;
    return 301 https://$host$request_uri;
}

# 2) Serve the EasyRent API over HTTPS
server {
    listen 443 ssl http2;
    server_name easyrent.zmachine.pro;

    client_max_body_size 50M;
    charset utf-8;

    ssl_certificate     /etc/letsencrypt/live/easyrent.zmachine.pro/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/easyrent.zmachine.pro/privkey.pem;
    include             /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam         /etc/letsencrypt/ssl-dhparams.pem;

    # Security Headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Timeouts for file uploads
    proxy_connect_timeout 300s;
    proxy_send_timeout 300s;
    proxy_read_timeout 300s;
    send_timeout 300s;

    # Logging
    access_log /var/log/nginx/easyrent_access.log;
    error_log /var/log/nginx/easyrent_error.log;

    # Proxy all requests to the Flask backend
    location /api {
        proxy_pass http://127.0.0.1:5001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # CORS is handled by Flask backend
    }

    # Health check endpoint
    location /health {
        proxy_pass http://127.0.0.1:5001/api/health;
        access_log off;
    }

    # Deny access to hidden files
    location ~ /\.(?!well-known).* {
        deny all;
    }
}